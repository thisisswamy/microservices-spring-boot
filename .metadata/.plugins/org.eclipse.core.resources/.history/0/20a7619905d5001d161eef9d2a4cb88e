package com.swamy.microservice.basics.configuration;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration;
import org.springframework.security.config.annotation.web.configuration.WebSecurityCustomizer;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.web.SecurityFilterChain;

import com.swamy.microservice.basics.repos.UserRepo;


@EnableWebSecurity
@Configuration
public class MySecurityConfig{
	
	private static final String[] SECURE_URLS= {"/all", "/{userName}"};
	private static final String[] PUBLIC_URLS= {"/register",};
	
	@Autowired
	private UserRepo userRepo;
	
	
	@Bean  //Exposing some routes to publicly
    public WebSecurityCustomizer webSecurityCustomizer() {
        return (web) -> web.ignoring().requestMatchers(PUBLIC_URLS);
    }
	
	 @Bean
	 public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
	        http.authorizeHttpRequests((authz) -> authz.anyRequest().permitAll());
	        return http.build();
	 }
	 
	 @Bean
	 public UserDetailsService userDetails() {
		 return appUser -> userRepo.findByEmailAddress(appUser)
	 }
	

}
